# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master", "feature", "release" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - run: mkdir staging && cp target/*.jar staging

    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
    - name: Set Release version env variable
      run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}

    - name: Create package
      run: zip -r mag-${{ env.RELEASE_VERSION }}.zip staging

    - name: List files in the folder staging
      run: |
        ls ${{ github.workspace }}/target

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./target/mobile-access-gateway-${{ env.RELEASE_VERSION }}-spring-boot.jar
        asset_name: mobile-access-gateway-${{ env.RELEASE_VERSION }}-spring-boot.jar
        asset_content_type: application/zip
    # Below we need to temporarily disable
    #- name: Generate the Jacoco report
    #  run: mvn jacoco:report
    
    #- name: Generate JaCoCo Badge
    #  id: jacoco
    #  uses: cicirello/jacoco-badge-generator@v2.11.0
    #- name: Log coverage percentage
    #  run: |
    #    echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
    #    echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
    
    #- name: Upload JaCoCo coverage report
     # uses: actions/upload-artifact@v4
     # with:
     #     name: jacoco-report
     #     path: target/site/jacoco/

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # Also needs to be disable due to failures in the current repository
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@v3
