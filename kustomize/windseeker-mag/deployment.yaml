apiVersion: apps/v1
kind: Deployment
metadata:
  name: windseeker-mag
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: windseeker-mag
  template:
    metadata:
      labels:
        app: windseeker-mag
    spec:
      initContainers:
        - name: windseeker-mag
          image: windseeker-mag
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 512Mi
              cpu: 250m
            requests:
              memory: 512Mi
              cpu: 250m
          volumeMounts:
            - name: windseeker-mag-tmp-volume
              mountPath: /tmp
      containers:
        - name: windseeker-mag
          image: windseeker-mag
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: containerPort
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 15
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: containerPort
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: containerPort
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 15
          volumeMounts:
            - mountPath: /tmp
              name: app-tmp-volume
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 100Mi
              cpu: 200m
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: windseeker-mag-tmp-volume
          emptyDir: {}
        - name: app-tmp-volume
          emptyDir: {}
      topologySpreadConstraints:
        - maxSkew: 1 # degree to which pods may be unevenly distributed (it must be greater than zero)
          topologyKey: topology.kubernetes.io/zone # use 'zone' topology label to ensure even spread across zones
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: windseeker-mag
        - maxSkew: 1 # degree to which pods may be unevenly distributed (it must be greater than zero)
          topologyKey: kubernetes.io/hostname # use 'hostname' topology label to ensure even spread across nodes
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: windseeker-mag
